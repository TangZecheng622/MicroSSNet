% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/B_pipeline.R
\name{bipartite_netpipeline}
\alias{bipartite_netpipeline}
\title{Bipartite Network Analysis Pipeline Function}
\usage{
bipartite_netpipeline(
  table1,
  table2,
  table1name = "domain1",
  table2name = "domain2",
  tax = NULL,
  cor_table_list = NULL,
  group_df = NULL,
  vscol1 = "group",
  pvl.threshold = 0.5,
  top = NULL,
  r.threshold = 0.8,
  p.threshold = 0.05,
  method = "pearson",
  R = 10,
  ncpus = 4,
  clu_method = "cluster_fast_greedy",
  p.adj = "BH",
  step = 10,
  rm.p.list = seq(0, 0.5, by = 0.1),
  zipi = TRUE,
  compare_net = TRUE,
  calculate_vul = TRUE,
  calculate_rob = TRUE,
  calculate_cpx = TRUE,
  output_dir = getwd()
)
}
\arguments{
\item{table1}{Data frame containing species abundance data for the first domain (rows as species, columns as samples).}

\item{table2}{Data frame containing species abundance data for the second domain.}

\item{table1name}{Character string specifying the prefix name for species in \code{table1}. Default is "domain1".}

\item{table2name}{Character string specifying the prefix name for species in \code{table2}. Default is "domain2".}

\item{tax}{Optional data frame containing taxonomic information of species.}

\item{cor_table_list}{Optional list containing pre-calculated correlation matrices.}

\item{group_df}{Optional data frame containing sample grouping information.}

\item{vscol1}{Character string specifying the column name in \code{group_df} that indicates group labels.}

\item{pvl.threshold}{Numeric value between 0 and 1 for prevalence threshold in filtering species.}

\item{top}{Numeric value. If \code{top >= 1}, selects the top \code{top} species based on average abundance.
If \verb{0 < top < 1}, selects species with average abundance greater than \code{top}.}

\item{r.threshold}{Numeric value for the correlation coefficient threshold.}

\item{p.threshold}{Numeric value for the p-value threshold in correlation analysis.}

\item{method}{Character string specifying the correlation method ("pearson", "spearman", "sparcc", "SpiecEasi").}

\item{R}{Integer, number of bootstrap replicates for SparCC method.}

\item{ncpus}{Integer, number of CPU cores to use for parallel processing.}

\item{clu_method}{Character string specifying the network clustering method. Supported methods are "cluster_walktrap", "cluster_edge_betweenness", "cluster_fast_greedy", "cluster_spinglass".}

\item{p.adj}{Character string specifying the p-value adjustment method. Options are "holm", "hochberg", "hommel", "bonferroni", "BH" (Benjamini & Hochberg), "BY" (Benjamini & Yekutieli), "fdr", "none".}

\item{step}{Integer, number of steps in robustness analysis.}

\item{rm.p.list}{Numeric vector of node removal proportions in robustness analysis.}

\item{zipi}{Logical, whether to calculate ZiPi values.}

\item{compare_net}{Logical, whether to compare the network with a random network.}

\item{calculate_vul}{Logical, whether to calculate vulnerability in robustness analysis.}

\item{calculate_rob}{Logical, whether to calculate robustness in robustness analysis.}

\item{calculate_cpx}{Logical, whether to calculate complexity in robustness analysis.}

\item{output_dir}{Character string specifying the output directory. Defaults to current working directory.}
}
\value{
The function outputs various files and plots in the specified output directory.
}
\description{
This function performs network construction and analysis for bipartite networks based on two microbial abundance data tables.
}
\examples{
# Example usage:
otu_table1 <- data.frame(
OTU_ID = paste0("OTU_", 1:10),
CK1 = c(10, 20, 30, 30, 5, 6, 7, 8, 12, 10),
CK2 = c(12, 24, 28, 28, 6, 7, 8, 9, 11, 9),
CK3 = c(11, 22, 29, 27, 7, 5, 7, 8, 13, 11),
CK4 = c(10, 21, 30, 30, 6, 6, 8, 8, 12, 10),
CK5 = c(11, 23, 31, 31, 5, 6, 7, 7, 13, 12),
CK6 = c(12, 25, 28, 29, 6, 5, 6, 9, 11, 11),
PD1 = c(10, 20, 30, 30, 5, 6, 7, 8, 12, 10),
PD2 = c(12, 24, 28, 28, 6, 7, 8, 9, 11, 9),
PD3 = c(11, 22, 29, 27, 7, 5, 7, 8, 13, 11),
PD4 = c(10, 21, 30, 30, 6, 6, 8, 8, 12, 10),
PD5 = c(11, 23, 31, 31, 5, 6, 7, 7, 13, 12),
PD6 = c(12, 25, 28, 29, 6, 5, 6, 9, 11, 11)
)
rownames(otu_table1) <- otu_table1$OTU_ID
otu_table1 <- otu_table1[, -1]
otu_table2 <- data.frame(
OTU_ID = paste0("ITS_", 1:10),
CK1 = c(10, 20, 30, 30, 5, 6, 7, 8, 12, 10),
CK2 = c(12, 24, 28, 28, 6, 7, 8, 9, 11, 9),
CK3 = c(11, 22, 29, 27, 7, 5, 7, 8, 13, 11),
CK4 = c(10, 21, 30, 30, 6, 6, 8, 8, 12, 10),
CK5 = c(11, 23, 31, 31, 5, 6, 7, 7, 13, 12),
CK6 = c(12, 25, 28, 29, 6, 5, 6, 9, 11, 11),
PD1 = c(10, 20, 30, 30, 5, 6, 7, 8, 12, 10),
PD2 = c(12, 24, 28, 28, 6, 7, 8, 9, 11, 9),
PD3 = c(11, 22, 29, 27, 7, 5, 7, 8, 13, 11),
PD4 = c(10, 21, 30, 30, 6, 6, 8, 8, 12, 10),
PD5 = c(11, 23, 31, 31, 5, 6, 7, 7, 13, 12),
PD6 = c(12, 25, 28, 29, 6, 5, 6, 9, 11, 11)
)
rownames(otu_table2) <- otu_table2$OTU_ID
otu_table2 <- otu_table2[, -1]

bipartite_netpipeline(
  table1 = otu_table1,
  table2 = otu_table2,
  group_df = NULL,
  vscol1 = "group",
  pvl.threshold = 0.1,
  top = NULL,
  r.threshold = 0,
  p.threshold = 1,
  method = "pearson",
  ncpus = 1,
  output_dir = "./bipartite_network_test"
)
}
